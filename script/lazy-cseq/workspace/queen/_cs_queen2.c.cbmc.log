CBMC version 5.6 64-bit x86_64 linux
Parsing workspace/queen/_cs_queen2.c
Converting
Type-checking _cs_queen2
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Not unwinding loop main_thread.0 iteration 1 (1 max) file workspace/queen/_cs_queen2.c line 330 function main_thread thread 0
Not unwinding loop main_thread.1 iteration 1 (1 max) file workspace/queen/_cs_queen2.c line 356 function main_thread thread 0
Not unwinding loop main_thread.2 iteration 1 (1 max) file workspace/queen/_cs_queen2.c line 357 function main_thread thread 0
Not unwinding loop main_thread.0 iteration 1 (1 max) file workspace/queen/_cs_queen2.c line 330 function main_thread thread 0
Not unwinding loop main_thread.1 iteration 1 (1 max) file workspace/queen/_cs_queen2.c line 356 function main_thread thread 0
Not unwinding loop main_thread.2 iteration 1 (1 max) file workspace/queen/_cs_queen2.c line 357 function main_thread thread 0
size of program expression: 3862 steps
simple slicing removed 78 assignments
Generated 40 VCC(s), 30 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
122146 variables, 403418 clauses
SAT checker: instance is UNSATISFIABLE
Runtime decision procedure: 0.879s

** Results:
[] free called for new[] object: SUCCESS
[__cs_mutex_destroy.assertion.1] attempt to destroy an uninitialized mutex: SUCCESS
[__cs_mutex_destroy.assertion.2] attempt to destroy a previously destroyed mutex: SUCCESS
[__cs_mutex_destroy.assertion.3] attempt to destroy a locked mutex: SUCCESS
[__cs_mutex_lock.assertion.1] attempt to lock an uninitialized mutex: SUCCESS
[__cs_mutex_lock.assertion.2] attempt to lock a destroyed mutex: SUCCESS
[__cs_mutex_unlock.assertion.1] attempt to unlock an uninitialized mutex: SUCCESS
[__cs_mutex_unlock.assertion.2] attempt to unlock a destroyed mutex: SUCCESS
[__cs_cond_wait_1.assertion.1] attempt to use an uninitialized conditional variable: SUCCESS
[__cs_cond_wait_1.assertion.2] attempt to use a destroyed conditional variable: SUCCESS
[__cs_barrier_init.assertion.1] count must be greater than 0: SUCCESS
[__cs_barrier_wait_1.assertion.1] attempt to use an uninitialized barrier variable: SUCCESS
[__cs_barrier_wait_2.assertion.1] attempt to use an uninitialized barrier variable: SUCCESS
[main_thread.assertion.1] free argument is dynamic object: SUCCESS
[main_thread.assertion.2] free argument has offset zero: SUCCESS
[main_thread.assertion.3] double free: SUCCESS
[main_thread.assertion.4] free called for new[] object: SUCCESS
[main_thread.assertion.5] free argument is dynamic object: SUCCESS
[main_thread.assertion.6] free argument has offset zero: SUCCESS
[main_thread.assertion.7] double free: SUCCESS
[main_thread.assertion.8] free called for new[] object: SUCCESS
[main_thread.assertion.9] free argument is dynamic object: SUCCESS
[main_thread.assertion.10] free argument has offset zero: SUCCESS
[main_thread.assertion.11] double free: SUCCESS
[main_thread.assertion.12] free called for new[] object: SUCCESS
[main_thread.assertion.13] free argument is dynamic object: SUCCESS
[main_thread.assertion.14] free argument has offset zero: SUCCESS
[main_thread.assertion.15] double free: SUCCESS
[main_thread.assertion.16] free called for new[] object: SUCCESS
[main_thread.assertion.17] free argument is dynamic object: SUCCESS
[main_thread.assertion.18] free argument has offset zero: SUCCESS
[main_thread.assertion.19] double free: SUCCESS
[main_thread.assertion.20] free called for new[] object: SUCCESS

** 0 of 33 failed (1 iteration)
VERIFICATION SUCCESSFUL
