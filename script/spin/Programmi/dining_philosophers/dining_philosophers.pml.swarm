#!/bin/sh

## Swarm Version 3.2 -- 5 June 2017
## source: http://www.spinroot.com/swarm
## ./swarm -c4 -m512M -t1.0 -s250000 -u128 -d10000  -f dining_philosophers.pml

# set -v

PREP=1
XEC=1
S="script"

while [ $# -gt 0 ]
do
	case "$1" in
	prep)
		echo "compiles and setup only"
		XEC=0
		;;
	exec)
		echo "script execution only"
		PREP=0
		;;
	base)
		if [ $# -gt 1 ]
		then
			S=$2
			echo "using $S as script basename"
			shift
		else
			echo "missing arg in: base name"
			exit 1
		fi
		;;
	*)	echo "bad arg $1, should be prep or exec"
		exit 1
		;;
	esac
	shift
done

if [ $PREP -eq 0 ] && [ $XEC -eq 0 ]
then	echo "error: choose 'exec' or 'prep' (default is to do both)"
	exit 0
fi
# exit 0

if [ -s *.trail ]
then echo "remove .trail file first";
     exit 1;
fi
if [ $PREP -eq 1 ]
then
	if [ -f dining_philosophers.pml ]
	then	spin   -a dining_philosophers.pml
		if [ $? -ne 0 ] ; then exit 1; fi
		if [ -f pan.c ] ; then true; else echo "error: no pan.c"; exit 1; fi

	fi
	if [ -f pan.c ]
	then
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -DREVERSE -DT_REVERSE -O2 -DSAFETY -o pan1 pan.c
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -DREVERSE -O2 -DSAFETY -o pan2 pan.c
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -DT_REVERSE -O2 -DSAFETY -o pan3 pan.c
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -O2 -DSAFETY -o pan4 pan.c
		cc -DBITSTATE -DPUTPID -DREVERSE -DT_REVERSE -O2 -DSAFETY -o pan5 pan.c
		cc -DBITSTATE -DPUTPID -DT_REVERSE -O2 -DSAFETY -o pan6 pan.c
		cc -DBITSTATE -DPUTPID -DREVERSE -O2 -DSAFETY -o pan7 pan.c
		cc -DBITSTATE -DPUTPID -O2 -DSAFETY -o pan8 pan.c
	else
		echo "swarm: no pan.c; cannot proceed"
		exit 1
	fi
	echo "#!/bin/sh" > ${S}0
	echo "#!/bin/sh" > ${S}1
	echo "#!/bin/sh" > ${S}2
	echo "#!/bin/sh" > ${S}3

	echo "./pan1 -k1 -w28 -m10000 -h93 -RS2745 -c1 -x -n	# 715.8 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k2 -w28 -m10000 -h13 -RS49839 -c1 -x -n	# 1431.7 sec (+ 715.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k3 -w28 -m10000 -h73 -RS65803 -c1 -x -n	# 2147.5 sec (+ 715.8 s, 32.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan4 -k4 -w28 -m10000 -h30 -RS227123 -c1 -x -n	# 2863.3 sec (+ 715.8 s, 32.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan5 -k5 -w28 -m10000 -h79 -c1 -x -n	# 3758.1 sec (+ 894.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan6 -k1 -w28 -m10000 -h31 -c1 -x -n	# 4473.9 sec (+ 715.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan7 -k2 -w28 -m10000 -h95 -c1 -x -n	# 5189.8 sec (+ 715.8 s, 32.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan8 -k3 -w28 -m10000 -h22 -c1 -x -n	# 5905.6 sec (+ 715.8 s, 32.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan1 -k4 -w28 -m128 -h26 -RS184338 -c1 -x -n	# 6621.4 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k5 -w28 -m128 -h1 -RS33102 -c1 -x -n	# 7516.2 sec (+ 894.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w28 -m128 -h24 -RS26631 -c1 -x -n	# 8232.0 sec (+ 715.8 s, 32.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan4 -k2 -w28 -m128 -h68 -RS34360 -c1 -x -n	# 8947.8 sec (+ 715.8 s, 32.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan5 -k3 -w28 -m128 -h21 -c1 -x -n	# 9663.7 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan6 -k4 -w28 -m128 -h91 -c1 -x -n	# 10379.5 sec (+ 715.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan7 -k5 -w28 -m128 -h16 -c1 -x -n	# 11274.3 sec (+ 894.8 s, 32.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan8 -k1 -w28 -m128 -h81 -c1 -x -n	# 11990.1 sec (+ 715.8 s, 32.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

# fill up rest of time 603 sec

	echo "./pan1 -k1 -w27 -m10000 -h46 -RS181059 -c1 -x -n	# 12348.0 sec (+ 357.9 s, 16.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k1 -w27 -m10000 -h93 -RS138509 -c1 -x -n	# 12705.9 sec (+ 357.9 s, 16.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w27 -m10000 -h26 -RS21239 -c1 -x -n	# 13063.9 sec (+ 357.9 s, 16.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan4 -k1 -w26 -m10000 -h99 -RS72131 -c1 -x -n	# 13242.8 sec (+ 179.0 s, 8.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan5 -k1 -w26 -m10000 -h91 -c1 -x -n	# 13421.8 sec (+ 179.0 s, 8.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan6 -k1 -w26 -m10000 -h76 -c1 -x -n	# 13600.7 sec (+ 179.0 s, 8.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan7 -k1 -w26 -m10000 -h78 -c1 -x -n	# 13779.7 sec (+ 179.0 s, 8.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan8 -k1 -w25 -m10000 -h48 -c1 -x -n	# 13869.2 sec (+ 89.5 s, 4.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan1 -k1 -w25 -m10000 -h55 -RS89172 -c1 -x -n	# 13958.6 sec (+ 89.5 s, 4.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k1 -w25 -m10000 -h72 -RS42557 -c1 -x -n	# 14048.1 sec (+ 89.5 s, 4.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w24 -m10000 -h48 -RS76017 -c1 -x -n	# 14092.9 sec (+ 44.7 s, 2.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan4 -k1 -w24 -m10000 -h85 -RS135576 -c1 -x -n	# 14137.6 sec (+ 44.7 s, 2.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan5 -k1 -w24 -m10000 -h58 -c1 -x -n	# 14182.3 sec (+ 44.7 s, 2.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan6 -k1 -w24 -m10000 -h31 -c1 -x -n	# 14227.1 sec (+ 44.7 s, 2.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan7 -k1 -w23 -m10000 -h89 -c1 -x -n	# 14249.4 sec (+ 22.4 s, 1.0 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan8 -k1 -w23 -m10000 -h26 -c1 -x -n	# 14271.8 sec (+ 22.4 s, 1.0 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan1 -k1 -w23 -m10000 -h39 -RS35318 -c1 -x -n	# 14294.2 sec (+ 22.4 s, 1.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k1 -w23 -m10000 -h16 -RS23102 -c1 -x -n	# 14316.6 sec (+ 22.4 s, 1.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w22 -m10000 -h15 -RS24360 -c1 -x -n	# 14327.7 sec (+ 11.2 s, 0.5 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan4 -k1 -w22 -m10000 -h84 -RS103059 -c1 -x -n	# 14338.9 sec (+ 11.2 s, 0.5 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan5 -k1 -w22 -m10000 -h1 -c1 -x -n	# 14350.1 sec (+ 11.2 s, 0.5 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan6 -k1 -w22 -m10000 -h7 -c1 -x -n	# 14361.3 sec (+ 11.2 s, 0.5 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan7 -k1 -w21 -m10000 -h34 -c1 -x -n	# 14366.9 sec (+ 5.6 s, 0.2 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan8 -k1 -w21 -m10000 -h68 -c1 -x -n	# 14372.5 sec (+ 5.6 s, 0.2 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan1 -k1 -w21 -m10000 -h11 -RS203358 -c1 -x -n	# 14378.1 sec (+ 5.6 s, 0.2 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k1 -w20 -m10000 -h13 -RS24949 -c1 -x -n	# 14380.9 sec (+ 2.8 s, 0.1 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w20 -m10000 -h89 -RS18059 -c1 -x -n	# 14383.7 sec (+ 2.8 s, 0.1 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan4 -k1 -w20 -m10000 -h98 -RS35394 -c1 -x -n	# 14386.5 sec (+ 2.8 s, 0.1 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan5 -k1 -w20 -m10000 -h13 -c1 -x -n	# 14389.3 sec (+ 2.8 s, 0.1 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan6 -k1 -w19 -m10000 -h74 -c1 -x -n	# 14390.7 sec (+ 1.4 s, 0.1 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan7 -k1 -w19 -m10000 -h43 -c1 -x -n	# 14392.1 sec (+ 1.4 s, 0.1 MB)" >> ${S}2
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}2

	echo "./pan8 -k1 -w19 -m10000 -h97 -c1 -x -n	# 14393.5 sec (+ 1.4 s, 0.1 MB)" >> ${S}3
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}3

	echo "./pan1 -k1 -w19 -m10000 -h74 -RS143869 -c1 -x -n	# 14394.9 sec (+ 1.4 s, 0.1 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "date > swarm_done_s0" >> ${S}0
	echo "exit 1" >> ${S}0

	echo "date > swarm_done_s1" >> ${S}1
	echo "exit 1" >> ${S}1

	echo "date > swarm_done_s2" >> ${S}2
	echo "exit 1" >> ${S}2

	echo "date > swarm_done_s3" >> ${S}3
	echo "exit 1" >> ${S}3
fi
# end of preparation

if [ $XEC -eq 1 ]
then
	rm -f swarm_done_s*
	rm -f swarm_times_up

	case `hostname` in
	*)
		sh ./${S}0 > ${S}0.out &
		sh ./${S}1 > ${S}1.out &
		sh ./${S}2 > ${S}2.out &
		sh ./${S}3 > ${S}3.out
		;;
	esac

	tt=0
	sd=0
	while [ $sd -eq 0 ]
	do
		case `hostname` in
		*)
			if [ -f swarm_done_s0 ] && [ -f swarm_done_s1 ] && [ -f swarm_done_s2 ] && [ -f swarm_done_s3 ] 
			then	sd=1; break
			fi
			;;
		esac

		if [ $tt -le 3600 ]
		then
			tt=`expr $tt + 10`
			sleep 10
		else
			date > swarm_times_up
			wait
			rm -f swarm_times_up
			break
		fi
	done
	rm -f swarm_done_s* pan.? pan[0-9]*

fi
