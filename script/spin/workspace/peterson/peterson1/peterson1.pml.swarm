#!/bin/sh

## Swarm Version 3.2 -- 5 June 2017
## source: http://www.spinroot.com/swarm
## ./swarm -c2 -m512M -t1.0 -s250000 -u128 -d10000  -f /home/mary/tacs/Swarm-Project/script/spin/workspace/peterson/peterson1/peterson1.pml

# set -v

PREP=1
XEC=1
S="script"

while [ $# -gt 0 ]
do
	case "$1" in
	prep)
		echo "compiles and setup only"
		XEC=0
		;;
	exec)
		echo "script execution only"
		PREP=0
		;;
	base)
		if [ $# -gt 1 ]
		then
			S=$2
			echo "using $S as script basename"
			shift
		else
			echo "missing arg in: base name"
			exit 1
		fi
		;;
	*)	echo "bad arg $1, should be prep or exec"
		exit 1
		;;
	esac
	shift
done

if [ $PREP -eq 0 ] && [ $XEC -eq 0 ]
then	echo "error: choose 'exec' or 'prep' (default is to do both)"
	exit 0
fi
# exit 0

if [ -s *.trail ]
then echo "remove .trail file first";
     exit 1;
fi
if [ $PREP -eq 1 ]
then
	if [ -f /home/mary/tacs/Swarm-Project/script/spin/workspace/peterson/peterson1/peterson1.pml ]
	then	spin   -a /home/mary/tacs/Swarm-Project/script/spin/workspace/peterson/peterson1/peterson1.pml
		if [ $? -ne 0 ] ; then exit 1; fi
		if [ -f pan.c ] ; then true; else echo "error: no pan.c"; exit 1; fi

	fi
	if [ -f pan.c ]
	then
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -DREVERSE -DT_REVERSE -O2 -DSAFETY -o pan1 pan.c
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -DREVERSE -O2 -DSAFETY -o pan2 pan.c
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -DT_REVERSE -O2 -DSAFETY -o pan3 pan.c
		cc -DBITSTATE -DPUTPID -DP_RAND -DT_RAND -O2 -DSAFETY -o pan4 pan.c
	else
		echo "swarm: no pan.c; cannot proceed"
		exit 1
	fi
	echo "#!/bin/sh" > ${S}0
	echo "#!/bin/sh" > ${S}1

	echo "./pan1 -k1 -w28 -m10000 -h93 -RS2745 	# 715.8 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k2 -w28 -m10000 -h13 -RS49839 	# 1431.7 sec (+ 715.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k3 -w28 -m10000 -h73 -RS65803 	# 2147.5 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan4 -k4 -w28 -m10000 -h30 -RS227123 	# 2863.3 sec (+ 715.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan1 -k1 -w28 -m128 -h79 -RS184338 	# 3579.1 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k2 -w28 -m128 -h31 -RS33102 	# 4295.0 sec (+ 715.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k3 -w28 -m128 -h95 -RS26631 	# 5010.8 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan4 -k4 -w28 -m128 -h22 -RS34360 	# 5726.6 sec (+ 715.8 s, 32.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan1 -k1 -w28 -m10000 -h26 -RS181059 	# 6442.5 sec (+ 715.8 s, 32.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

# fill up rest of time 379 sec

	echo "./pan2 -k1 -w27 -m10000 -h68 -RS138509 	# 6800.4 sec (+ 357.9 s, 16.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w26 -m10000 -h91 -RS21239 	# 6979.3 sec (+ 179.0 s, 8.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan4 -k1 -w25 -m10000 -h81 -RS72131 	# 7068.8 sec (+ 89.5 s, 4.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan1 -k1 -w24 -m10000 -h7 -RS89172 	# 7113.5 sec (+ 44.7 s, 2.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k1 -w23 -m10000 -h93 -RS42557 	# 7135.9 sec (+ 22.4 s, 1.0 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w23 -m10000 -h26 -RS76017 	# 7158.3 sec (+ 22.4 s, 1.0 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan4 -k1 -w22 -m10000 -h99 -RS135576 	# 7169.5 sec (+ 11.2 s, 0.5 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan1 -k1 -w22 -m10000 -h91 -RS35318 	# 7180.6 sec (+ 11.2 s, 0.5 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k1 -w21 -m10000 -h78 -RS23102 	# 7186.2 sec (+ 5.6 s, 0.2 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan3 -k1 -w21 -m10000 -h16 -RS24360 	# 7191.8 sec (+ 5.6 s, 0.2 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan4 -k1 -w20 -m10000 -h55 -RS103059 	# 7194.6 sec (+ 2.8 s, 0.1 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "./pan1 -k1 -w19 -m10000 -h85 -RS203358 	# 7196.0 sec (+ 1.4 s, 0.1 MB)" >> ${S}0
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}0

	echo "./pan2 -k1 -w19 -m10000 -h48 -RS24949 	# 7197.4 sec (+ 1.4 s, 0.1 MB)" >> ${S}1
	echo "if [ -f swarm_times_up ] ; then exit 1; fi" >> ${S}1

	echo "date > swarm_done_s0" >> ${S}0
	echo "exit 1" >> ${S}0

	echo "date > swarm_done_s1" >> ${S}1
	echo "exit 1" >> ${S}1
fi
# end of preparation

if [ $XEC -eq 1 ]
then
	rm -f swarm_done_s*
	rm -f swarm_times_up

	case `hostname` in
	*)
		sh ./${S}0 > ${S}0.out &
		sh ./${S}1 > ${S}1.out
		;;
	esac

	tt=0
	sd=0
	while [ $sd -eq 0 ]
	do
		case `hostname` in
		*)
			if [ -f swarm_done_s0 ] && [ -f swarm_done_s1 ] 
			then	sd=1; break
			fi
			;;
		esac

		if [ $tt -le 3600 ]
		then
			tt=`expr $tt + 10`
			sleep 10
		else
			date > swarm_times_up
			wait
			rm -f swarm_times_up
			break
		fi
	done
	rm -f swarm_done_s* pan.? pan[0-9]*

fi
